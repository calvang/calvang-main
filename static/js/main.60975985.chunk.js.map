{"version":3,"sources":["components/Navbar.tsx","components/PortfolioPreview.tsx","views/Home.tsx","views/Projects.tsx","components/Routes.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Navbar","props","toggleMenu","state","isMenuOpen","setState","this","links","link","label","icon","className","style","width","onClick","map","page","i","href","fontSize","verticalAlign","id","Component","Portfolio","margin","src","alt","Home","openResume","window","location","assign","homeData","resume","whoami","text","skills","languages","programming","markup","frameworks","frontend","backend","databases","infrastructures","cloud","deployment","servers","action","target","type","placeholder","required","name","Project","Routes","exact","path","component","Projects","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.60975985.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport logo from '../resources/images/logo.png';\nimport '../css/App.css';\n//import { isConditionalExpression } from 'typescript';\n\ninterface NavbarProps {}\ninterface NavbarState {\n  isMenuOpen: boolean,\n}\n\nexport default class Navbar extends Component<NavbarProps, NavbarState> {\n  constructor(props: NavbarProps) {\n    super(props);\n    this.state = {\n      isMenuOpen: false\n    }\n  }\n\n  toggleMenu = () => {\n    const { isMenuOpen } = this.state;\n    isMenuOpen ? this.setState({ isMenuOpen: false }) \n    : this.setState({ isMenuOpen: true });\n  }\n\n  render() {\n    const { isMenuOpen } = this.state;\n    const links = [\n      {\n        link: \"/react-github-pages/\",\n        label: \"HOME\",\n        icon: \"fa fa-home\"\n      },\n      {\n        link: \"/react-github-pages/#/About\",\n        label: \"ABOUT\",\n        icon: \"fa fa-user\"\n      },\n      {\n        link: \"/react-github-pages/#/Projects\",\n        label: \"PROJECTS\",\n        icon: \"fa fa-code\"\n      },\n      {\n        link: \"/react-github-pages/#/Contact\",\n        label: \"CONTACT\",\n        icon: \"fa fa-envelope\"\n      }\n    ]\n    return (\n      <>\n        {isMenuOpen ?\n          <div>\n            {/*Navbar on large screens*/}\n            <div className=\"w3-top w3-small w3-hide-small w3-hide-medium w3-left\">\n              <div className=\"w3-bar w3-black w3-opacity w3-hover-opacity-off w3-center w3-medium\">\n                <button className=\"w3-bar-item w3-button w3-padding\"\n                  style={{ width: \"100px\" }}\n                  onClick={this.toggleMenu}>\n                  <i className=\"fa fa-bars fa-fw w3-xxlarge\"></i>\n                </button>\n                {\n                  links.map((page, i) => {\n                    return (\n                      <a href={page.link} className=\"w3-bar-item w3-button\"\n                        style={{ fontSize: \"calc(5px + 2vmin)\", verticalAlign: \"center\", width:\"22.5%\" }}>\n                        <i className={page.icon + \" w3-xlarge\"} ></i>\n                        {\" \" + page.label}\n                      </a>\n                    )\n                  })\n                }\n              </div>\n            </div> \n            {/* <nav className=\"w3-sidebar w3-bar-block w3-small w3-hide-small w3-hide-medium w3-hide-large w3-center\"\n              style={{ width: \"auto\", background: \"#222\" }}>\n              <button className=\"w3-bar-item w3-button w3-hover-black\" \n                  onClick={this.toggleMenu}>\n                  <img src={logo} style={{ width: \"100%\", zoom: \"10%\" }} alt=\"logo\" />\n              </button>\n              <div>\n                {\n                  links.map((page, i) => {\n                    return (\n                      <a href={page.link} className=\"w3-bar-item w3-button w3-padding-small w3-hover-black\">\n                        <i className={page.icon + \" w3-xxlarge\"}></i>\n                        <p>{page.label}</p>\n                      </a>\n                    )\n                  })\n                }\n              </div>\n            </nav>  */}\n            {/*Navbar on medium screens*/}\n            <div className=\"w3-top w3-small w3-hide-small w3-hide-large w3-left\">\n              <div className=\"w3-bar w3-black w3-opacity w3-hover-opacity-off w3-center w3-medium\">\n                <button className=\"w3-bar-item w3-button w3-padding\"\n                  \n                  onClick={this.toggleMenu}>\n                  <i className=\"fa fa-bars fa-fw w3-xlarge\"></i>\n                </button>\n                {\n                  links.map((page, i) => {\n                    return (\n                      <a href={page.link} className=\"w3-bar-item w3-button\"\n                        style={{ fontSize: \"calc(1px + 2vmin)\", verticalAlign: \"center\", width:\"22.5%\" }}>\n                        <i className={page.icon + \" w3-large\"} ></i>\n                        {\" \" + page.label}\n                      </a>\n                    )\n                  })\n                }\n              </div>\n            </div> \n            {/*Navbar on small screens*/}\n            <div className=\"w3-top w3-hide-large w3-hide-medium\" id=\"myNavbar\">\n              <div className=\"w3-bar w3-black w3-opacity w3-hover-opacity-off w3-center w3-medium\">\n                <button className=\"w3-bar-item w3-button w3-padding\"\n                  onClick={this.toggleMenu}>\n                  <i className=\"fa fa-bars fa-fw w3-xlarge\"></i>\n                </button>\n                {\n                  links.map((page, i) => {\n                    return (\n                      <a href={page.link} className=\"w3-bar-item w3-button\" style={{width:\"20%\"}}>\n                        {page.label}\n                      </a>\n                    )\n                  })\n                }\n              </div>\n            </div>\n          </div> :\n          <div>\n            <nav className=\"w3-top w3-black w3-hide-small w3-hide-medium w3-opacity w3-hover-opacity-off\"\n              style={{ width: \"100px\" }}\n              id=\"mySidebar\">\n              <div className=\"w3-bar-block w3-center\">\n                <button className=\"w3-bar-item w3-button w3-padding\"\n                  onClick={this.toggleMenu}>\n                  <i className=\"fa fa-bars fa-fw w3-xxlarge\"></i>\n                </button> \n              </div>\n            </nav>\n            <nav className=\"w3-top w3-black w3-hide-large w3-opacity w3-hover-opacity-off\"\n              style={{ width: \"auto\" }}\n              id=\"mySidebar\">\n              <div className=\"w3-bar-block w3-center\">\n                <button className=\"w3-bar-item w3-button w3-padding\"\n                  onClick={this.toggleMenu}>\n                  <i className=\"fa fa-bars fa-fw w3-xlarge\"></i>\n                </button> \n              </div>\n            </nav>\n          </div>\n        }\n      </>\n\n    );\n  }\n}","import React, { Component } from 'react';\nimport projectData from '../resources/data/projects.json';\nimport '../css/App.css';\n\nexport default class Portfolio extends Component {\n  render() {\n    return (\n      <div className=\"w3-row-padding\" style={{ margin: \"0 -16px\" }}>\n        <div className=\"w3-half\">\n          <img src=\"/w3images/wedding.jpg\" style={{ width: \"100%\" }} alt=\"img\" />\n          <img src=\"/w3images/rocks.jpg\" style={{ width: \"100%\" }} alt=\"img\" />\n          <img src=\"/w3images/sailboat.jpg\" style={{ width: \"100%\" }} alt=\"img\" />\n        </div>\n\n        <div className=\"w3-half\">\n          <img src=\"/w3images/underwater.jpg\" style={{ width: \"100%\" }} alt=\"img\" />\n          <img src=\"/w3images/chef.jpg\" style={{ width: \"100%\" }} alt=\"img\" />\n          <img src=\"/w3images/wedding.jpg\" style={{ width: \"100%\" }} alt=\"img\" />\n          <img src=\"/w3images/p6.jpg\" style={{ width: \"100%\" }} alt=\"img\" />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Portfolio from '../components/PortfolioPreview';\nimport homeData from '../resources/data/home.json';\nimport '../css/Home.css';\nimport '../css/App.css';\n\ninterface HomeProps {}\ninterface HomeState {\n  isMenuOpen: boolean\n}\n\nexport default class Home extends Component<HomeProps, HomeState> {\n  constructor(props: HomeProps) {\n    super(props);\n    this.state = {\n      isMenuOpen: false\n    }\n  }\n\n  openResume = () => {\n    window.location.assign(homeData.resume);\n  }\n\n  render() {\n    return (\n      <div className=\"w3-black\" id=\"main\">\n        <header className=\"w3-container w3-center Home-container1\" id=\"home\">\n          <div className=\"vertical-center\">\n            <h1 className=\"w3-jumbo\"><span className=\"w3-hide-small\">I'm</span> Calvin Huang.</h1>\n            <p>Full-stack web and desktop app student developer.</p>\n          </div>\n        </header>\n\n        <div className=\"w3-content w3-justify w3-text-grey w3-padding-large\" id=\"about\">\n          <h2 className=\"w3-text-light-grey\">whoami</h2>\n          <hr className=\"w3-opacity\" style={{ width: \"200px\" }} />\n          <p>{homeData.whoami.text}</p>\n          <h3 className=\"w3-padding-16 w3-text-light-grey\">My Skills</h3>\n          <p className=\"w3-wide w3-large\">Languages</p>\n          {/* <hr /> */}\n          <div className=\"w3-row w3-center w3-section w3-light-grey\">\n            <div className=\"w3-half w3-section w3-padding\">\n              <span className=\"w3-xlarge\">Programming/Query</span><br />\n              <span className=\"w3-padding-large\">{homeData.skills.languages.programming}</span>\n            </div>\n            <div className=\"w3-half w3-section w3-padding\">\n              <span className=\"w3-xlarge\">Markup</span><br />\n              <span className=\"w3-padding-large\">{homeData.skills.languages.markup}</span>\n            </div>\n          </div>\n          <p className=\"w3-wide w3-large\">Frameworks</p>\n          <div className=\"w3-row w3-center w3-section w3-light-grey\">\n            <div className=\"w3-third w3-section w3-padding\">\n              <span className=\"w3-xlarge\">Frontend</span><br />\n              <span className=\"w3-padding\">{homeData.skills.frameworks.frontend}</span>\n            </div>\n            <div className=\"w3-third w3-section w3-padding\">\n              <span className=\"w3-xlarge\">Backend</span><br />\n              <span className=\"w3-padding\">{homeData.skills.frameworks.backend}</span>\n            </div>\n            <div className=\"w3-third w3-section w3-padding\">\n              <span className=\"w3-xlarge\">Databases</span><br />\n              <span className=\"w3-padding\">{homeData.skills.frameworks.databases}</span>\n            </div>\n          </div>\n          <p className=\"w3-wide w3-large\">Infrastructures</p>\n          <div className=\"w3-row w3-center w3-section w3-light-grey\">\n            <div className=\"w3-third w3-section w3-padding\">\n              <span className=\"w3-xlarge\">Cloud</span><br />\n              <span className=\"w3-padding\">{homeData.skills.infrastructures.cloud}</span>\n            </div>\n            <div className=\"w3-third w3-section w3-padding\">\n              <span className=\"w3-xlarge\">Deployment</span><br />\n              <span className=\"w3-padding\">{homeData.skills.infrastructures.deployment}</span>\n            </div>\n            <div className=\"w3-third w3-section w3-padding\">\n              <span className=\"w3-xlarge\">Servers</span><br />\n              <span className=\"w3-padding\">{homeData.skills.infrastructures.servers}</span>\n            </div>\n          </div>\n\n          <button className=\"w3-button w3-light-grey w3-padding-large w3-section\"\n            onClick={this.openResume}>\n            <i className=\"fa fa-download\"></i> View Resume\n          </button>\n        \n        </div>\n        \n        {/* <!-- Portfolio Section --> */}\n        <div className=\"w3-padding-large w3-content\" id=\"photos\">\n          <h2 className=\"w3-text-light-grey\">My Photos</h2>\n          <hr style={{ width: \"200px\" }} className=\"w3-opacity\" />\n\n          {/* <!-- Grid for Projects --> */}\n          <Portfolio />\n        </div>\n\n\n        <div className=\"w3-padding-large w3-content w3-text-grey\" id=\"contact\">\n          <h2 className=\"w3-text-light-grey\">Contact Me</h2>\n          <hr style={{ width: \"200px\" }} className=\"w3-opacity\" />\n\n          <div className=\"w3-section\">\n            <p><i className=\"fa fa-map-marker fa-fw w3-text-white w3-xxlarge w3-margin-right\"></i> Chicago, US</p>\n            <p><i className=\"fa fa-phone fa-fw w3-text-white w3-xxlarge w3-margin-right\"></i> Phone: +00 151515</p>\n            <p><i className=\"fa fa-envelope fa-fw w3-text-white w3-xxlarge w3-margin-right\"> </i> Email: mail@mail.com</p>\n          </div><br />\n          <p>Let's get in touch. Send me a message:</p>\n\n          <form action=\"/action_page.php\" target=\"_blank\">\n            <p><input className=\"w3-input w3-padding-16\" type=\"text\" placeholder=\"Name\" required name=\"Name\" /></p>\n            <p><input className=\"w3-input w3-padding-16\" type=\"text\" placeholder=\"Email\" required name=\"Email\" /></p>\n            <p><input className=\"w3-input w3-padding-16\" type=\"text\" placeholder=\"Subject\" required name=\"Subject\" /></p>\n            <p><input className=\"w3-input w3-padding-16\" type=\"text\" placeholder=\"Message\" required name=\"Message\" /></p>\n            <p>\n              <button className=\"w3-button w3-light-grey w3-padding-large\" type=\"submit\">\n                <i className=\"fa fa-paper-plane\"></i> SEND MESSAGE\n              </button>\n            </p>\n          </form>\n\n        </div>\n\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport projectData from '../resources/data/projects.json'\nimport '../css/App.css';\n\nexport default class Project extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Placeholder</h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Home from '../views/Home';\n//import About from '../views/About';\nimport Projects from '../views/Projects';\n//import Contact from '../views/Contact';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\nimport '../css/App.css';\n\nexport default class Routes extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <Switch>\n          <Route exact path='/' component={Home}></Route>\n          <Route exact path='/Projects' component={Projects}></Route>\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n","import React from 'react';\nimport Navbar from './components/Navbar';\nimport Routes from './components/Routes';\nimport './css/App.css';\n\nfunction App() {\n  return (\n    <div className=\"w3-black\">\n      <Navbar />\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}